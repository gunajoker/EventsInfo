package packageCA_Event_Option;

import java.io.FileWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.io.IOException;  // Import the IOException class to handle errors


public class ClassCA_Event_Option {

	public  void methodCA_EVENTOption(String Arg_DB_endpoint,String Arg_port,String Arg_DB_SID,String Arg_DB_uname,String Arg_DB_password,String Arg_Event_num) throws SQLException, IOException{
		
		
		String DB_endpoint= Arg_DB_endpoint;
	     String port= Arg_port;
	     String DB_SID= Arg_DB_SID;
	     String DB_uname= Arg_DB_uname;
	     String DB_password= Arg_DB_password;
	     String Event_num = Arg_Event_num;
	     
	     String sql   = "select ACTIVE_STATUS,	APLI_FLG,	ARCHIVAL_STATUS,	ASSET_ID,	BOLQ,	BOLQ_DISPLAY,	BOLQ_FORMAT,	BOLQ_QTY_CODE,	BOLQ_TYPE,	CERTIFICATION_FLG,	CERTIFICATION_TYPE_IND,	CERTIFICATION_TYPE_IND_ACCI,	CERTIFICATION_TYPE_IND_DOMI,	CERTIFICATION_TYPE_IND_FRAC,	CERTIFICATION_TYPE_IND_FULL,	CERTIFICATION_TYPE_IND_NARR,	CERTIFICATION_TYPE_IND_NCOM,	CERTIFICATION_TYPE_IND_NDOM,	CERTIFICATION_TYPE_IND_PABD,	CERTIFICATION_TYPE_IND_PAPW,	CERTIFICATION_TYPE_IND_QIBB,	CERTIFICATION_TYPE_IND_TRBD,	CHANGE_ALLOWED_FLG,	CLEANSING_LOCKED,	COMMON_GROUPING_ATT,	CREATION_CONFIG_FLAG,	CURRENCY_OPTION,	DEFAULT_PROCESSING_FLG,	DISP_OF_FRACTIONS_IND,	DOMI_COUNTRY,	ENTITY_TYPE,	EVENT_NUM,	FLOW_ID,	FOLQ,	FOLQ_DISPLAY,	FOLQ_FORMAT,	FOLQ_QTY_CODE,	FOLQ_TYPE,	HIDE_OPTION_FLAG,	INBOX_ID,	INTERMEDIATE_SEC_DIST_IND,	IS_DELETED,	LISTING_ID,	MAEX,	MAEX_DISPLAY,	MAEX_FORMAT,	MAEX_QTY_CODE,	MAEX_TYPE,	MASTER_SEQUENCE_NUMBER,	MIC,	MIN_EX_MULTIPLE_QTY,	MIN_EX_MULTIPLE_QTY_CODE,	MIN_EX_MULTIPLE_QTY_FORMAT,	MIN_EX_MULTIPLE_QTY_TYPE,	MIN_EX_QTY,	MIN_EX_QTY_CODE,	MIN_EX_QTY_FORMAT,	MIN_EX_QTY_TYPE,	NEW_BOARD_LOT_QTY,	NEW_BOARD_LOT_QTY_CODE,	NEW_BOARD_LOT_QTY_FORMAT,	NEW_BOARD_LOT_QTY_TYPE,	NEW_DENOM_QTY,	NEW_DENOM_QTY_CODE,	NEW_DENOM_QTY_FORMAT,	NEW_DENOM_QTY_TYPE,	NON_DOMICILE_COUNTRY,	NON_ELIGIBLE_PROCEEDS_IND,	OFFER_TYPE_IND,	OFFER_TYPE_IND_DISS,	OFFER_TYPE_IND_ERUN,	OFFER_TYPE_IND_FCFS,	OFFER_TYPE_IND_FINL,	OFFER_TYPE_IND_MINI,	OFFER_TYPE_IND_PART,	OFFER_TYPE_IND_SQUE,	OPTION_CODE_IND,	OPTION_DESCRIPTION,	OPTION_DISPLAY_ORDER,	OPTION_FEATURES_IND,	OPTION_FEATURES_IND_ASVO,	OPTION_FEATURES_IND_BOIS,	OPTION_FEATURES_IND_CAOS,	OPTION_FEATURES_IND_COND,	OPTION_FEATURES_IND_MAXC,	OPTION_FEATURES_IND_MAXS,	OPTION_FEATURES_IND_NOSE,	OPTION_FEATURES_IND_OPLF,	OPTION_FEATURES_IND_PINS,	OPTION_FEATURES_IND_PROR,	OPTION_FEATURES_IND_QCAS,	OPTION_FEATURES_IND_QOVE,	OPTION_FEATURES_IND_QREC,	OPTION_FEATURES_IND_SHAR,	OPTION_FEATURES_IND_VVPR,	OPTION_ID,	OPTION_SEQUENCE_NUM,	OPT_LEVEL_CLEANSING_STATUS,	OPT_LEVEL_COMPLETENESS_STATUS,	OUT_BLOCKING_STRATEGY,	OUT_UNBLOCKING_STRATEGY,	OVERALL_STATUS,	PLACE_OF_TRADE,	PLACE_OF_TRADE_NARRATIVE,	PRIORITY,	READY_FOR_ARCHIVAL_DATE,	REASSIGN_FLAG,	REDEMPTION_CHARGES_FLG,	SECURITY_DESCRIPTION,	SECURITY_ID,	SECURITY_ID_TYPE,	SOFT_LOCK_KEY,	STANDING_INSTRUCTION_FLG,	STATUS_IND,	SYSTEM_OPTION,	SYS_ENTRY_DATE,	TRADE_BLOCKING_STRATEGY,	TRADE_UNBLOCKING_STRATEGY,	WITHDRAWAL_ALLOWED_FLG from ca_event_option where event_num in (select event_num from ca_Event where master_id in ( Select master_id from ca_event where event_num='"+Event_num+"'))" ;
	     
	     
	     
	     // Get SQL from the flat file named "sqlfile"
	     System.out.println(sql);
	       
	     try {
	     	Class.forName("oracle.jdbc.driver.OracleDriver");
			} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			} 
	     
	     FileWriter myWriter;
			myWriter = new FileWriter(System.getProperty("user.dir")+"\\"+Event_num+"CA_Event_Option.csv");
			myWriter.write("ACTIVE_STATUS,	APLI_FLG,	ARCHIVAL_STATUS,	ASSET_ID,	BOLQ,	BOLQ_DISPLAY,	BOLQ_FORMAT,	BOLQ_QTY_CODE,	BOLQ_TYPE,	CERTIFICATION_FLG,	CERTIFICATION_TYPE_IND,	CERTIFICATION_TYPE_IND_ACCI,	CERTIFICATION_TYPE_IND_DOMI,	CERTIFICATION_TYPE_IND_FRAC,	CERTIFICATION_TYPE_IND_FULL,	CERTIFICATION_TYPE_IND_NARR,	CERTIFICATION_TYPE_IND_NCOM,	CERTIFICATION_TYPE_IND_NDOM,	CERTIFICATION_TYPE_IND_PABD,	CERTIFICATION_TYPE_IND_PAPW,	CERTIFICATION_TYPE_IND_QIBB,	CERTIFICATION_TYPE_IND_TRBD,	CHANGE_ALLOWED_FLG,	CLEANSING_LOCKED,	COMMON_GROUPING_ATT,	CREATION_CONFIG_FLAG,	CURRENCY_OPTION,	DEFAULT_PROCESSING_FLG,	DISP_OF_FRACTIONS_IND,	DOMI_COUNTRY,	ENTITY_TYPE,	EVENT_NUM,	FLOW_ID,	FOLQ,	FOLQ_DISPLAY,	FOLQ_FORMAT,	FOLQ_QTY_CODE,	FOLQ_TYPE,	HIDE_OPTION_FLAG,	INBOX_ID,	INTERMEDIATE_SEC_DIST_IND,	IS_DELETED,	LISTING_ID,	MAEX,	MAEX_DISPLAY,	MAEX_FORMAT,	MAEX_QTY_CODE,	MAEX_TYPE,	MASTER_SEQUENCE_NUMBER,	MIC,	MIN_EX_MULTIPLE_QTY,	MIN_EX_MULTIPLE_QTY_CODE,	MIN_EX_MULTIPLE_QTY_FORMAT,	MIN_EX_MULTIPLE_QTY_TYPE,	MIN_EX_QTY,	MIN_EX_QTY_CODE,	MIN_EX_QTY_FORMAT,	MIN_EX_QTY_TYPE,	NEW_BOARD_LOT_QTY,	NEW_BOARD_LOT_QTY_CODE,	NEW_BOARD_LOT_QTY_FORMAT,	NEW_BOARD_LOT_QTY_TYPE,	NEW_DENOM_QTY,	NEW_DENOM_QTY_CODE,	NEW_DENOM_QTY_FORMAT,	NEW_DENOM_QTY_TYPE,	NON_DOMICILE_COUNTRY,	NON_ELIGIBLE_PROCEEDS_IND,	OFFER_TYPE_IND,	OFFER_TYPE_IND_DISS,	OFFER_TYPE_IND_ERUN,	OFFER_TYPE_IND_FCFS,	OFFER_TYPE_IND_FINL,	OFFER_TYPE_IND_MINI,	OFFER_TYPE_IND_PART,	OFFER_TYPE_IND_SQUE,	OPTION_CODE_IND,	OPTION_DESCRIPTION,	OPTION_DISPLAY_ORDER,	OPTION_FEATURES_IND,	OPTION_FEATURES_IND_ASVO,	OPTION_FEATURES_IND_BOIS,	OPTION_FEATURES_IND_CAOS,	OPTION_FEATURES_IND_COND,	OPTION_FEATURES_IND_MAXC,	OPTION_FEATURES_IND_MAXS,	OPTION_FEATURES_IND_NOSE,	OPTION_FEATURES_IND_OPLF,	OPTION_FEATURES_IND_PINS,	OPTION_FEATURES_IND_PROR,	OPTION_FEATURES_IND_QCAS,	OPTION_FEATURES_IND_QOVE,	OPTION_FEATURES_IND_QREC,	OPTION_FEATURES_IND_SHAR,	OPTION_FEATURES_IND_VVPR,	OPTION_ID,	OPTION_SEQUENCE_NUM,	OPT_LEVEL_CLEANSING_STATUS,	OPT_LEVEL_COMPLETENESS_STATUS,	OUT_BLOCKING_STRATEGY,	OUT_UNBLOCKING_STRATEGY,	OVERALL_STATUS,	PLACE_OF_TRADE,	PLACE_OF_TRADE_NARRATIVE,	PRIORITY,	READY_FOR_ARCHIVAL_DATE,	REASSIGN_FLAG,	REDEMPTION_CHARGES_FLG,	SECURITY_DESCRIPTION,	SECURITY_ID,	SECURITY_ID_TYPE,	SOFT_LOCK_KEY,	STANDING_INSTRUCTION_FLG,	STATUS_IND,	SYSTEM_OPTION,	SYS_ENTRY_DATE,	TRADE_BLOCKING_STRATEGY,	TRADE_UNBLOCKING_STRATEGY,	WITHDRAWAL_ALLOWED_FLG \n");
			
	     Connection con = DriverManager.getConnection("jdbc:oracle:thin:@//"+DB_endpoint+":"+port+"/"+DB_SID+"", ""+DB_uname+"", ""+DB_password+""); 
	     Statement stmt = con.createStatement(); 
	     ResultSet rs = stmt.executeQuery(sql);
	    
	     while(rs.next()){
	         //Retrieve by column name
	    	 int ACTIVE_STATUS =  rs.getInt("ACTIVE_STATUS");
	    	 String APLI_FLG =  rs.getString("APLI_FLG");
	    	 int ARCHIVAL_STATUS =  rs.getInt("ARCHIVAL_STATUS");
	    	 int ASSET_ID =  rs.getInt("ASSET_ID");
	    	 int BOLQ =  rs.getInt("BOLQ");
	    	 String BOLQ_DISPLAY =  rs.getString("BOLQ_DISPLAY");
	    	 int BOLQ_FORMAT =  rs.getInt("BOLQ_FORMAT");
	    	 int BOLQ_QTY_CODE =  rs.getInt("BOLQ_QTY_CODE");
	    	 int BOLQ_TYPE =  rs.getInt("BOLQ_TYPE");
	    	 String CERTIFICATION_FLG =  rs.getString("CERTIFICATION_FLG");
	    	 int CERTIFICATION_TYPE_IND =  rs.getInt("CERTIFICATION_TYPE_IND");
	    	 int CERTIFICATION_TYPE_IND_ACCI =  rs.getInt("CERTIFICATION_TYPE_IND_ACCI");
	    	 int CERTIFICATION_TYPE_IND_DOMI =  rs.getInt("CERTIFICATION_TYPE_IND_DOMI");
	    	 int CERTIFICATION_TYPE_IND_FRAC =  rs.getInt("CERTIFICATION_TYPE_IND_FRAC");
	    	 int CERTIFICATION_TYPE_IND_FULL =  rs.getInt("CERTIFICATION_TYPE_IND_FULL");
	    	 int CERTIFICATION_TYPE_IND_NARR =  rs.getInt("CERTIFICATION_TYPE_IND_NARR");
	    	 int CERTIFICATION_TYPE_IND_NCOM =  rs.getInt("CERTIFICATION_TYPE_IND_NCOM");
	    	 int CERTIFICATION_TYPE_IND_NDOM =  rs.getInt("CERTIFICATION_TYPE_IND_NDOM");
	    	 int CERTIFICATION_TYPE_IND_PABD =  rs.getInt("CERTIFICATION_TYPE_IND_PABD");
	    	 int CERTIFICATION_TYPE_IND_PAPW =  rs.getInt("CERTIFICATION_TYPE_IND_PAPW");
	    	 int CERTIFICATION_TYPE_IND_QIBB =  rs.getInt("CERTIFICATION_TYPE_IND_QIBB");
	    	 int CERTIFICATION_TYPE_IND_TRBD =  rs.getInt("CERTIFICATION_TYPE_IND_TRBD");
	    	 String CHANGE_ALLOWED_FLG =  rs.getString("CHANGE_ALLOWED_FLG");
	    	 String CLEANSING_LOCKED =  rs.getString("CLEANSING_LOCKED");
	    	 String COMMON_GROUPING_ATT =  rs.getString("COMMON_GROUPING_ATT");
	    	 int CREATION_CONFIG_FLAG =  rs.getInt("CREATION_CONFIG_FLAG");
	    	 int CURRENCY_OPTION =  rs.getInt("CURRENCY_OPTION");
	    	 int DEFAULT_PROCESSING_FLG =  rs.getInt("DEFAULT_PROCESSING_FLG");
	    	 int DISP_OF_FRACTIONS_IND =  rs.getInt("DISP_OF_FRACTIONS_IND");
	    	 int DOMI_COUNTRY =  rs.getInt("DOMI_COUNTRY");
	    	 int ENTITY_TYPE =  rs.getInt("ENTITY_TYPE");
	    	 int EVENT_NUM =  rs.getInt("EVENT_NUM");
	    	 int FLOW_ID =  rs.getInt("FLOW_ID");
	    	 int FOLQ =  rs.getInt("FOLQ");
	    	 String FOLQ_DISPLAY =  rs.getString("FOLQ_DISPLAY");
	    	 int FOLQ_FORMAT =  rs.getInt("FOLQ_FORMAT");
	    	 int FOLQ_QTY_CODE =  rs.getInt("FOLQ_QTY_CODE");
	    	 int FOLQ_TYPE =  rs.getInt("FOLQ_TYPE");
	    	 int HIDE_OPTION_FLAG =  rs.getInt("HIDE_OPTION_FLAG");
	    	 int INBOX_ID =  rs.getInt("INBOX_ID");
	    	 int INTERMEDIATE_SEC_DIST_IND =  rs.getInt("INTERMEDIATE_SEC_DIST_IND");
	    	 String IS_DELETED =  rs.getString("IS_DELETED");
	    	 int LISTING_ID =  rs.getInt("LISTING_ID");
	    	 int MAEX =  rs.getInt("MAEX");
	    	 String MAEX_DISPLAY =  rs.getString("MAEX_DISPLAY");
	    	 int MAEX_FORMAT =  rs.getInt("MAEX_FORMAT");
	    	 int MAEX_QTY_CODE =  rs.getInt("MAEX_QTY_CODE");
	    	 int MAEX_TYPE =  rs.getInt("MAEX_TYPE");
	    	 int MASTER_SEQUENCE_NUMBER =  rs.getInt("MASTER_SEQUENCE_NUMBER");
	    	 String MIC =  rs.getString("MIC");
	    	 int MIN_EX_MULTIPLE_QTY =  rs.getInt("MIN_EX_MULTIPLE_QTY");
	    	 int MIN_EX_MULTIPLE_QTY_CODE =  rs.getInt("MIN_EX_MULTIPLE_QTY_CODE");
	    	 int MIN_EX_MULTIPLE_QTY_FORMAT =  rs.getInt("MIN_EX_MULTIPLE_QTY_FORMAT");
	    	 int MIN_EX_MULTIPLE_QTY_TYPE =  rs.getInt("MIN_EX_MULTIPLE_QTY_TYPE");
	    	 int MIN_EX_QTY =  rs.getInt("MIN_EX_QTY");
	    	 int MIN_EX_QTY_CODE =  rs.getInt("MIN_EX_QTY_CODE");
	    	 int MIN_EX_QTY_FORMAT =  rs.getInt("MIN_EX_QTY_FORMAT");
	    	 int MIN_EX_QTY_TYPE =  rs.getInt("MIN_EX_QTY_TYPE");
	    	 int NEW_BOARD_LOT_QTY =  rs.getInt("NEW_BOARD_LOT_QTY");
	    	 int NEW_BOARD_LOT_QTY_CODE =  rs.getInt("NEW_BOARD_LOT_QTY_CODE");
	    	 int NEW_BOARD_LOT_QTY_FORMAT =  rs.getInt("NEW_BOARD_LOT_QTY_FORMAT");
	    	 int NEW_BOARD_LOT_QTY_TYPE =  rs.getInt("NEW_BOARD_LOT_QTY_TYPE");
	    	 int NEW_DENOM_QTY =  rs.getInt("NEW_DENOM_QTY");
	    	 int NEW_DENOM_QTY_CODE =  rs.getInt("NEW_DENOM_QTY_CODE");
	    	 int NEW_DENOM_QTY_FORMAT =  rs.getInt("NEW_DENOM_QTY_FORMAT");
	    	 int NEW_DENOM_QTY_TYPE =  rs.getInt("NEW_DENOM_QTY_TYPE");
	    	 int NON_DOMICILE_COUNTRY =  rs.getInt("NON_DOMICILE_COUNTRY");
	    	 int NON_ELIGIBLE_PROCEEDS_IND =  rs.getInt("NON_ELIGIBLE_PROCEEDS_IND");
	    	 int OFFER_TYPE_IND =  rs.getInt("OFFER_TYPE_IND");
	    	 int OFFER_TYPE_IND_DISS =  rs.getInt("OFFER_TYPE_IND_DISS");
	    	 int OFFER_TYPE_IND_ERUN =  rs.getInt("OFFER_TYPE_IND_ERUN");
	    	 int OFFER_TYPE_IND_FCFS =  rs.getInt("OFFER_TYPE_IND_FCFS");
	    	 int OFFER_TYPE_IND_FINL =  rs.getInt("OFFER_TYPE_IND_FINL");
	    	 int OFFER_TYPE_IND_MINI =  rs.getInt("OFFER_TYPE_IND_MINI");
	    	 int OFFER_TYPE_IND_PART =  rs.getInt("OFFER_TYPE_IND_PART");
	    	 int OFFER_TYPE_IND_SQUE =  rs.getInt("OFFER_TYPE_IND_SQUE");
	    	 int OPTION_CODE_IND =  rs.getInt("OPTION_CODE_IND");
	    	 String OPTION_DESCRIPTION =  rs.getString("OPTION_DESCRIPTION");
	    	 int OPTION_DISPLAY_ORDER =  rs.getInt("OPTION_DISPLAY_ORDER");
	    	 int OPTION_FEATURES_IND =  rs.getInt("OPTION_FEATURES_IND");
	    	 int OPTION_FEATURES_IND_ASVO =  rs.getInt("OPTION_FEATURES_IND_ASVO");
	    	 int OPTION_FEATURES_IND_BOIS =  rs.getInt("OPTION_FEATURES_IND_BOIS");
	    	 int OPTION_FEATURES_IND_CAOS =  rs.getInt("OPTION_FEATURES_IND_CAOS");
	    	 int OPTION_FEATURES_IND_COND =  rs.getInt("OPTION_FEATURES_IND_COND");
	    	 int OPTION_FEATURES_IND_MAXC =  rs.getInt("OPTION_FEATURES_IND_MAXC");
	    	 int OPTION_FEATURES_IND_MAXS =  rs.getInt("OPTION_FEATURES_IND_MAXS");
	    	 int OPTION_FEATURES_IND_NOSE =  rs.getInt("OPTION_FEATURES_IND_NOSE");
	    	 int OPTION_FEATURES_IND_OPLF =  rs.getInt("OPTION_FEATURES_IND_OPLF");
	    	 int OPTION_FEATURES_IND_PINS =  rs.getInt("OPTION_FEATURES_IND_PINS");
	    	 int OPTION_FEATURES_IND_PROR =  rs.getInt("OPTION_FEATURES_IND_PROR");
	    	 int OPTION_FEATURES_IND_QCAS =  rs.getInt("OPTION_FEATURES_IND_QCAS");
	    	 int OPTION_FEATURES_IND_QOVE =  rs.getInt("OPTION_FEATURES_IND_QOVE");
	    	 int OPTION_FEATURES_IND_QREC =  rs.getInt("OPTION_FEATURES_IND_QREC");
	    	 int OPTION_FEATURES_IND_SHAR =  rs.getInt("OPTION_FEATURES_IND_SHAR");
	    	 int OPTION_FEATURES_IND_VVPR =  rs.getInt("OPTION_FEATURES_IND_VVPR");
	    	 int OPTION_ID =  rs.getInt("OPTION_ID");
	    	 int OPTION_SEQUENCE_NUM =  rs.getInt("OPTION_SEQUENCE_NUM");
	    	 int OPT_LEVEL_CLEANSING_STATUS =  rs.getInt("OPT_LEVEL_CLEANSING_STATUS");
	    	 int OPT_LEVEL_COMPLETENESS_STATUS =  rs.getInt("OPT_LEVEL_COMPLETENESS_STATUS");
	    	 int OUT_BLOCKING_STRATEGY =  rs.getInt("OUT_BLOCKING_STRATEGY");
	    	 int OUT_UNBLOCKING_STRATEGY =  rs.getInt("OUT_UNBLOCKING_STRATEGY");
	    	 int OVERALL_STATUS =  rs.getInt("OVERALL_STATUS");
	    	 int PLACE_OF_TRADE =  rs.getInt("PLACE_OF_TRADE");
	    	 String PLACE_OF_TRADE_NARRATIVE =  rs.getString("PLACE_OF_TRADE_NARRATIVE");
	    	 int PRIORITY =  rs.getInt("PRIORITY");
	    	 String READY_FOR_ARCHIVAL_DATE =  rs.getString("READY_FOR_ARCHIVAL_DATE");
	    	 int REASSIGN_FLAG =  rs.getInt("REASSIGN_FLAG");
	    	 String REDEMPTION_CHARGES_FLG =  rs.getString("REDEMPTION_CHARGES_FLG");
	    	 String SECURITY_DESCRIPTION =  rs.getString("SECURITY_DESCRIPTION");
	    	 String SECURITY_ID =  rs.getString("SECURITY_ID");
	    	 int SECURITY_ID_TYPE =  rs.getInt("SECURITY_ID_TYPE");
	    	 int SOFT_LOCK_KEY =  rs.getInt("SOFT_LOCK_KEY");
	    	 String STANDING_INSTRUCTION_FLG =  rs.getString("STANDING_INSTRUCTION_FLG");
	    	 int STATUS_IND =  rs.getInt("STATUS_IND");
	    	 String SYSTEM_OPTION =  rs.getString("SYSTEM_OPTION");
	    	 String SYS_ENTRY_DATE =  rs.getString("SYS_ENTRY_DATE");
	    	 int TRADE_BLOCKING_STRATEGY =  rs.getInt("TRADE_BLOCKING_STRATEGY");
	    	 int TRADE_UNBLOCKING_STRATEGY =  rs.getInt("TRADE_UNBLOCKING_STRATEGY");
	    	 String WITHDRAWAL_ALLOWED_FLG =  rs.getString("WITHDRAWAL_ALLOWED_FLG");

	     
		  myWriter.write(+ACTIVE_STATUS+","	+APLI_FLG+","	+ARCHIVAL_STATUS+","	+ASSET_ID+","	+BOLQ+","	+BOLQ_DISPLAY+","	+BOLQ_FORMAT+","	+BOLQ_QTY_CODE+","	+BOLQ_TYPE+","	+CERTIFICATION_FLG+","	+CERTIFICATION_TYPE_IND+","	+CERTIFICATION_TYPE_IND_ACCI+","	+CERTIFICATION_TYPE_IND_DOMI+","	+CERTIFICATION_TYPE_IND_FRAC+","	+CERTIFICATION_TYPE_IND_FULL+","	+CERTIFICATION_TYPE_IND_NARR+","	+CERTIFICATION_TYPE_IND_NCOM+","	+CERTIFICATION_TYPE_IND_NDOM+","	+CERTIFICATION_TYPE_IND_PABD+","	+CERTIFICATION_TYPE_IND_PAPW+","	+CERTIFICATION_TYPE_IND_QIBB+","	+CERTIFICATION_TYPE_IND_TRBD+","	+CHANGE_ALLOWED_FLG+","	+CLEANSING_LOCKED+","	+COMMON_GROUPING_ATT+","	+CREATION_CONFIG_FLAG+","	+CURRENCY_OPTION+","	+DEFAULT_PROCESSING_FLG+","	+DISP_OF_FRACTIONS_IND+","	+DOMI_COUNTRY+","	+ENTITY_TYPE+","	+EVENT_NUM+","	+FLOW_ID+","	+FOLQ+","	+FOLQ_DISPLAY+","	+FOLQ_FORMAT+","	+FOLQ_QTY_CODE+","	+FOLQ_TYPE+","	+HIDE_OPTION_FLAG+","	+INBOX_ID+","	+INTERMEDIATE_SEC_DIST_IND+","	+IS_DELETED+","	+LISTING_ID+","	+MAEX+","	+MAEX_DISPLAY+","	+MAEX_FORMAT+","	+MAEX_QTY_CODE+","	+MAEX_TYPE+","	+MASTER_SEQUENCE_NUMBER+","	+MIC+","	+MIN_EX_MULTIPLE_QTY+","	+MIN_EX_MULTIPLE_QTY_CODE+","	+MIN_EX_MULTIPLE_QTY_FORMAT+","	+MIN_EX_MULTIPLE_QTY_TYPE+","	+MIN_EX_QTY+","	+MIN_EX_QTY_CODE+","	+MIN_EX_QTY_FORMAT+","	+MIN_EX_QTY_TYPE+","	+NEW_BOARD_LOT_QTY+","	+NEW_BOARD_LOT_QTY_CODE+","	+NEW_BOARD_LOT_QTY_FORMAT+","	+NEW_BOARD_LOT_QTY_TYPE+","	+NEW_DENOM_QTY+","	+NEW_DENOM_QTY_CODE+","	+NEW_DENOM_QTY_FORMAT+","	+NEW_DENOM_QTY_TYPE+","	+NON_DOMICILE_COUNTRY+","	+NON_ELIGIBLE_PROCEEDS_IND+","	+OFFER_TYPE_IND+","	+OFFER_TYPE_IND_DISS+","	+OFFER_TYPE_IND_ERUN+","	+OFFER_TYPE_IND_FCFS+","	+OFFER_TYPE_IND_FINL+","	+OFFER_TYPE_IND_MINI+","	+OFFER_TYPE_IND_PART+","	+OFFER_TYPE_IND_SQUE+","	+OPTION_CODE_IND+","	+OPTION_DESCRIPTION+","	+OPTION_DISPLAY_ORDER+","	+OPTION_FEATURES_IND+","	+OPTION_FEATURES_IND_ASVO+","	+OPTION_FEATURES_IND_BOIS+","	+OPTION_FEATURES_IND_CAOS+","	+OPTION_FEATURES_IND_COND+","	+OPTION_FEATURES_IND_MAXC+","	+OPTION_FEATURES_IND_MAXS+","	+OPTION_FEATURES_IND_NOSE+","	+OPTION_FEATURES_IND_OPLF+","	+OPTION_FEATURES_IND_PINS+","	+OPTION_FEATURES_IND_PROR+","	+OPTION_FEATURES_IND_QCAS+","	+OPTION_FEATURES_IND_QOVE+","	+OPTION_FEATURES_IND_QREC+","	+OPTION_FEATURES_IND_SHAR+","	+OPTION_FEATURES_IND_VVPR+","	+OPTION_ID+","	+OPTION_SEQUENCE_NUM+","	+OPT_LEVEL_CLEANSING_STATUS+","	+OPT_LEVEL_COMPLETENESS_STATUS+","	+OUT_BLOCKING_STRATEGY+","	+OUT_UNBLOCKING_STRATEGY+","	+OVERALL_STATUS+","	+PLACE_OF_TRADE+","	+PLACE_OF_TRADE_NARRATIVE+","	+PRIORITY+","	+READY_FOR_ARCHIVAL_DATE+","	+REASSIGN_FLAG+","	+REDEMPTION_CHARGES_FLG+","	+SECURITY_DESCRIPTION+","	+SECURITY_ID+","	+SECURITY_ID_TYPE+","	+SOFT_LOCK_KEY+","	+STANDING_INSTRUCTION_FLG+","	+STATUS_IND+","	+SYSTEM_OPTION+","	+SYS_ENTRY_DATE+","	+TRADE_BLOCKING_STRATEGY+","	+TRADE_UNBLOCKING_STRATEGY+","	+WITHDRAWAL_ALLOWED_FLG);
		  myWriter.write("\n");

	 
	     
	     System.out.println(+ACTIVE_STATUS+","	+APLI_FLG+","	+ARCHIVAL_STATUS+","	+ASSET_ID+","	+BOLQ+","	+BOLQ_DISPLAY+","	+BOLQ_FORMAT+","	+BOLQ_QTY_CODE+","	+BOLQ_TYPE+","	+CERTIFICATION_FLG+","	+CERTIFICATION_TYPE_IND+","	+CERTIFICATION_TYPE_IND_ACCI+","	+CERTIFICATION_TYPE_IND_DOMI+","	+CERTIFICATION_TYPE_IND_FRAC+","	+CERTIFICATION_TYPE_IND_FULL+","	+CERTIFICATION_TYPE_IND_NARR+","	+CERTIFICATION_TYPE_IND_NCOM+","	+CERTIFICATION_TYPE_IND_NDOM+","	+CERTIFICATION_TYPE_IND_PABD+","	+CERTIFICATION_TYPE_IND_PAPW+","	+CERTIFICATION_TYPE_IND_QIBB+","	+CERTIFICATION_TYPE_IND_TRBD+","	+CHANGE_ALLOWED_FLG+","	+CLEANSING_LOCKED+","	+COMMON_GROUPING_ATT+","	+CREATION_CONFIG_FLAG+","	+CURRENCY_OPTION+","	+DEFAULT_PROCESSING_FLG+","	+DISP_OF_FRACTIONS_IND+","	+DOMI_COUNTRY+","	+ENTITY_TYPE+","	+EVENT_NUM+","	+FLOW_ID+","	+FOLQ+","	+FOLQ_DISPLAY+","	+FOLQ_FORMAT+","	+FOLQ_QTY_CODE+","	+FOLQ_TYPE+","	+HIDE_OPTION_FLAG+","	+INBOX_ID+","	+INTERMEDIATE_SEC_DIST_IND+","	+IS_DELETED+","	+LISTING_ID+","	+MAEX+","	+MAEX_DISPLAY+","	+MAEX_FORMAT+","	+MAEX_QTY_CODE+","	+MAEX_TYPE+","	+MASTER_SEQUENCE_NUMBER+","	+MIC+","	+MIN_EX_MULTIPLE_QTY+","	+MIN_EX_MULTIPLE_QTY_CODE+","	+MIN_EX_MULTIPLE_QTY_FORMAT+","	+MIN_EX_MULTIPLE_QTY_TYPE+","	+MIN_EX_QTY+","	+MIN_EX_QTY_CODE+","	+MIN_EX_QTY_FORMAT+","	+MIN_EX_QTY_TYPE+","	+NEW_BOARD_LOT_QTY+","	+NEW_BOARD_LOT_QTY_CODE+","	+NEW_BOARD_LOT_QTY_FORMAT+","	+NEW_BOARD_LOT_QTY_TYPE+","	+NEW_DENOM_QTY+","	+NEW_DENOM_QTY_CODE+","	+NEW_DENOM_QTY_FORMAT+","	+NEW_DENOM_QTY_TYPE+","	+NON_DOMICILE_COUNTRY+","	+NON_ELIGIBLE_PROCEEDS_IND+","	+OFFER_TYPE_IND+","	+OFFER_TYPE_IND_DISS+","	+OFFER_TYPE_IND_ERUN+","	+OFFER_TYPE_IND_FCFS+","	+OFFER_TYPE_IND_FINL+","	+OFFER_TYPE_IND_MINI+","	+OFFER_TYPE_IND_PART+","	+OFFER_TYPE_IND_SQUE+","	+OPTION_CODE_IND+","	+OPTION_DESCRIPTION+","	+OPTION_DISPLAY_ORDER+","	+OPTION_FEATURES_IND+","	+OPTION_FEATURES_IND_ASVO+","	+OPTION_FEATURES_IND_BOIS+","	+OPTION_FEATURES_IND_CAOS+","	+OPTION_FEATURES_IND_COND+","	+OPTION_FEATURES_IND_MAXC+","	+OPTION_FEATURES_IND_MAXS+","	+OPTION_FEATURES_IND_NOSE+","	+OPTION_FEATURES_IND_OPLF+","	+OPTION_FEATURES_IND_PINS+","	+OPTION_FEATURES_IND_PROR+","	+OPTION_FEATURES_IND_QCAS+","	+OPTION_FEATURES_IND_QOVE+","	+OPTION_FEATURES_IND_QREC+","	+OPTION_FEATURES_IND_SHAR+","	+OPTION_FEATURES_IND_VVPR+","	+OPTION_ID+","	+OPTION_SEQUENCE_NUM+","	+OPT_LEVEL_CLEANSING_STATUS+","	+OPT_LEVEL_COMPLETENESS_STATUS+","	+OUT_BLOCKING_STRATEGY+","	+OUT_UNBLOCKING_STRATEGY+","	+OVERALL_STATUS+","	+PLACE_OF_TRADE+","	+PLACE_OF_TRADE_NARRATIVE+","	+PRIORITY+","	+READY_FOR_ARCHIVAL_DATE+","	+REASSIGN_FLAG+","	+REDEMPTION_CHARGES_FLG+","	+SECURITY_DESCRIPTION+","	+SECURITY_ID+","	+SECURITY_ID_TYPE+","	+SOFT_LOCK_KEY+","	+STANDING_INSTRUCTION_FLG+","	+STATUS_IND+","	+SYSTEM_OPTION+","	+SYS_ENTRY_DATE+","	+TRADE_BLOCKING_STRATEGY+","	+TRADE_UNBLOCKING_STRATEGY+","	+WITHDRAWAL_ALLOWED_FLG);

	      }
	      rs.close();
	      stmt.close();
	      con.close();
	      myWriter.close();
	      System.out.println("Successfully executed");
		}

}
