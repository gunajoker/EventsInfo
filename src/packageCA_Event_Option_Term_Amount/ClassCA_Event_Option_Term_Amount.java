package packageCA_Event_Option_Term_Amount;

import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class ClassCA_Event_Option_Term_Amount {

	public  void methodCA_EVENTOptionTermAmount(String Arg_DB_endpoint,String Arg_port,String Arg_DB_SID,String Arg_DB_uname,String Arg_DB_password,String Arg_Event_num) throws SQLException, IOException{
		
		
		
		String DB_endpoint= Arg_DB_endpoint;
	     String port= Arg_port;
	     String DB_SID= Arg_DB_SID;
	     String DB_uname= Arg_DB_uname;
	     String DB_password= Arg_DB_password;
	     String Event_num = Arg_Event_num;
	     
	     String sql   = "select ACRU_AMOUNT,	ACRU_CURRENCY,	ACRU_DISPLAY,	ACRU_FORMAT,	ACTIVE_STATUS,	ADJS_AMOUNT,	ADJS_CURRENCY,	ADJS_DISPLAY,	ARCHIVAL_STATUS,	ARRE_AMOUNT,	ARRE_CURRENCY,	ATAX_AMOUNT,	ATAX_CURRENCY,	BWIT_AMOUNT,	BWIT_CURRENCY,	BWIT_DISPLAY,	BWIT_FORMAT,	CABF_AMOUNT,	CABF_CURRENCY,	CACF_AMOUNT,	CACF_CURRENCY,	CAPG_AMOUNT,	CAPG_CURRENCY,	CDFI_AMOUNT,	CDFI_CURRENCY,	CDFI_DISPLAY,	CHAR_AMOUNT,	CHAR_CURRENCY,	CINL_AMOUNT,	CINL_CURRENCY,	COUN_AMOUNT,	COUN_CURRENCY,	DEDI_AMOUNT,	DEDI_CURRENCY,	DEDI_DISPLAY,	DEEM_AMOUNT,	DEEM_CURRENCY,	DEEM_DISPLAY,	DEFP_AMOUNT,	DEFP_CURRENCY,	DEFP_DISPLAY,	DEIT_AMOUNT,	DEIT_CURRENCY,	DEIT_DISPLAY,	DERY_AMOUNT,	DERY_CURRENCY,	DERY_DISPLAY,	ENTITY_TYPE,	ENTL_AMOUNT,	ENTL_CURRENCY,	EQUL_AMOUNT,	EQUL_CURRENCY,	EQUL_DISPLAY,	EUTR_AMOUNT,	EUTR_CURRENCY,	EVENT_NUM,	EXEC_AMOUNT,	EXEC_CURRENCY,	FISC_AMOUNT,	FISC_CURRENCY,	FLFR_AMOUNT,	FLFR_CURRENCY,	FLOW_ID,	FTCA_AMOUNT,	FTCA_CURRENCY,	FTCA_DISPLAY,	FTCA_FORMAT,	GRSS_AMOUNT,	GRSS_CURRENCY,	INBOX_ID,	INCE_AMOUNT,	INCE_CURRENCY,	INCO_AMOUNT,	INCO_CURRENCY,	INCO_DISPLAY,	INCO_FORMAT,	INDM_AMOUNT,	INDM_CURRENCY,	INTR_AMOUNT,	INTR_CURRENCY,	ISDI_AMOUNT,	ISDI_CURRENCY,	LADT_AMOUNT,	LADT_CURRENCY,	LEVY_AMOUNT,	LEVY_CURRENCY,	LIDT_AMOUNT,	LIDT_CURRENCY,	LOCL_AMOUNT,	LOCL_CURRENCY,	LOCO_AMOUNT,	LOCO_CURRENCY,	LOTE_AMOUNT,	LOTE_CURRENCY,	LYDT_AMOUNT,	LYDT_CURRENCY,	MFDV_AMOUNT,	MFDV_CURRENCY,	MKTC_AMOUNT,	MKTC_CURRENCY,	NDIP_AMOUNT,	NDIP_CURRENCY,	NETT_AMOUNT,	NETT_CURRENCY,	NRAT_AMOUNT,	NRAT_CURRENCY,	NRAT_DISPLAY,	NRAT_FORMAT,	NTAX_AMOUNT,	NTAX_CURRENCY,	OCMT_AMOUNT,	OCMT_CURRENCY,	OPTION_SEQUENCE_NUM,	OVERALL_STATUS,	PAMM_AMOUNT,	PAMM_CURRENCY,	POST_AMOUNT,	POST_CURRENCY,	PRIN_AMOUNT,	PRIN_CURRENCY,	PRIORITY,	PSTA_AMOUNT,	PSTA_CURRENCY,	PSTA_FORMAT,	READY_FOR_ARCHIVAL_DATE,	REDP_AMOUNT,	REDP_CURRENCY,	REFU_AMOUNT,	REFU_CURRENCY,	REFU_DISPLAY,	REGF_AMOUNT,	REGF_CURRENCY,	REIN_AMOUNT,	REIN_CURRENCY,	RESU_AMOUNT,	RESU_CURRENCY,	SHIP_AMOUNT,	SHIP_CURRENCY,	SOFE_AMOUNT,	SOFE_CURRENCY,	SOFT_LOCK_KEY,	SOIC_AMOUNT,	SOIC_CURRENCY,	SPCN_AMOUNT,	SPCN_CURRENCY,	STAM_AMOUNT,	STAM_CURRENCY,	STEX_AMOUNT,	STEX_CURRENCY,	SUBS_AMOUNT,	SUBS_CURRENCY,	SYS_ENTRY_DATE,	TAXC_AMOUNT,	TAXC_CURRENCY,	TAXR_AMOUNT,	TAXR_CURRENCY,	TERM_SEQUENCE_NUM,	TRAN_AMOUNT,	TRAN_CURRENCY,	TRAX_AMOUNT,	TRAX_CURRENCY,	TRAX_FORMAT,	TXDF_AMOUNT,	TXDF_CURRENCY,	TXFR_AMOUNT,	TXFR_CURRENCY,	TXIN_AMOUNT,	TXIN_CURRENCY,	TXIN_DISPLAY,	TXIN_FORMAT,	TXRC_AMOUNT,	TXRC_CURRENCY,	UNFR_AMOUNT,	UNFR_CURRENCY,	VATA_AMOUNT,	VATA_CURRENCY,	WITF_AMOUNT,	WITF_CURRENCY,	WITL_AMOUNT,	WITL_CURRENCY from CA_EVENT_OPTION_TERM_AMOUNT where event_num in (select event_num from ca_Event where master_id in ( Select master_id from ca_event where event_num='"+Event_num+"'))" ;
	     
	     
	     
	     // Get SQL from the flat file named "sqlfile"
	     System.out.println(sql);
	       
	     try {
	     	Class.forName("oracle.jdbc.driver.OracleDriver");
			} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			} 
	     
	     FileWriter myWriter;
			
			myWriter = new FileWriter(System.getProperty("user.dir")+"\\"+Event_num+"CA_Event_Option_Term_Amount.csv");
			myWriter.write("ACRU_AMOUNT,	ACRU_CURRENCY,	ACRU_DISPLAY,	ACRU_FORMAT,	ACTIVE_STATUS,	ADJS_AMOUNT,	ADJS_CURRENCY,	ADJS_DISPLAY,	ARCHIVAL_STATUS,	ARRE_AMOUNT,	ARRE_CURRENCY,	ATAX_AMOUNT,	ATAX_CURRENCY,	BWIT_AMOUNT,	BWIT_CURRENCY,	BWIT_DISPLAY,	BWIT_FORMAT,	CABF_AMOUNT,	CABF_CURRENCY,	CACF_AMOUNT,	CACF_CURRENCY,	CAPG_AMOUNT,	CAPG_CURRENCY,	CDFI_AMOUNT,	CDFI_CURRENCY,	CDFI_DISPLAY,	CHAR_AMOUNT,	CHAR_CURRENCY,	CINL_AMOUNT,	CINL_CURRENCY,	COUN_AMOUNT,	COUN_CURRENCY,	DEDI_AMOUNT,	DEDI_CURRENCY,	DEDI_DISPLAY,	DEEM_AMOUNT,	DEEM_CURRENCY,	DEEM_DISPLAY,	DEFP_AMOUNT,	DEFP_CURRENCY,	DEFP_DISPLAY,	DEIT_AMOUNT,	DEIT_CURRENCY,	DEIT_DISPLAY,	DERY_AMOUNT,	DERY_CURRENCY,	DERY_DISPLAY,	ENTITY_TYPE,	ENTL_AMOUNT,	ENTL_CURRENCY,	EQUL_AMOUNT,	EQUL_CURRENCY,	EQUL_DISPLAY,	EUTR_AMOUNT,	EUTR_CURRENCY,	EVENT_NUM,	EXEC_AMOUNT,	EXEC_CURRENCY,	FISC_AMOUNT,	FISC_CURRENCY,	FLFR_AMOUNT,	FLFR_CURRENCY,	FLOW_ID,	FTCA_AMOUNT,	FTCA_CURRENCY,	FTCA_DISPLAY,	FTCA_FORMAT,	GRSS_AMOUNT,	GRSS_CURRENCY,	INBOX_ID,	INCE_AMOUNT,	INCE_CURRENCY,	INCO_AMOUNT,	INCO_CURRENCY,	INCO_DISPLAY,	INCO_FORMAT,	INDM_AMOUNT,	INDM_CURRENCY,	INTR_AMOUNT,	INTR_CURRENCY,	ISDI_AMOUNT,	ISDI_CURRENCY,	LADT_AMOUNT,	LADT_CURRENCY,	LEVY_AMOUNT,	LEVY_CURRENCY,	LIDT_AMOUNT,	LIDT_CURRENCY,	LOCL_AMOUNT,	LOCL_CURRENCY,	LOCO_AMOUNT,	LOCO_CURRENCY,	LOTE_AMOUNT,	LOTE_CURRENCY,	LYDT_AMOUNT,	LYDT_CURRENCY,	MFDV_AMOUNT,	MFDV_CURRENCY,	MKTC_AMOUNT,	MKTC_CURRENCY,	NDIP_AMOUNT,	NDIP_CURRENCY,	NETT_AMOUNT,	NETT_CURRENCY,	NRAT_AMOUNT,	NRAT_CURRENCY,	NRAT_DISPLAY,	NRAT_FORMAT,	NTAX_AMOUNT,	NTAX_CURRENCY,	OCMT_AMOUNT,	OCMT_CURRENCY,	OPTION_SEQUENCE_NUM,	OVERALL_STATUS,	PAMM_AMOUNT,	PAMM_CURRENCY,	POST_AMOUNT,	POST_CURRENCY,	PRIN_AMOUNT,	PRIN_CURRENCY,	PRIORITY,	PSTA_AMOUNT,	PSTA_CURRENCY,	PSTA_FORMAT,	READY_FOR_ARCHIVAL_DATE,	REDP_AMOUNT,	REDP_CURRENCY,	REFU_AMOUNT,	REFU_CURRENCY,	REFU_DISPLAY,	REGF_AMOUNT,	REGF_CURRENCY,	REIN_AMOUNT,	REIN_CURRENCY,	RESU_AMOUNT,	RESU_CURRENCY,	SHIP_AMOUNT,	SHIP_CURRENCY,	SOFE_AMOUNT,	SOFE_CURRENCY,	SOFT_LOCK_KEY,	SOIC_AMOUNT,	SOIC_CURRENCY,	SPCN_AMOUNT,	SPCN_CURRENCY,	STAM_AMOUNT,	STAM_CURRENCY,	STEX_AMOUNT,	STEX_CURRENCY,	SUBS_AMOUNT,	SUBS_CURRENCY,	SYS_ENTRY_DATE,	TAXC_AMOUNT,	TAXC_CURRENCY,	TAXR_AMOUNT,	TAXR_CURRENCY,	TERM_SEQUENCE_NUM,	TRAN_AMOUNT,	TRAN_CURRENCY,	TRAX_AMOUNT,	TRAX_CURRENCY,	TRAX_FORMAT,	TXDF_AMOUNT,	TXDF_CURRENCY,	TXFR_AMOUNT,	TXFR_CURRENCY,	TXIN_AMOUNT,	TXIN_CURRENCY,	TXIN_DISPLAY,	TXIN_FORMAT,	TXRC_AMOUNT,	TXRC_CURRENCY,	UNFR_AMOUNT,	UNFR_CURRENCY,	VATA_AMOUNT,	VATA_CURRENCY,	WITF_AMOUNT,	WITF_CURRENCY,	WITL_AMOUNT,	WITL_CURRENCY \n");
			
	     Connection con = DriverManager.getConnection("jdbc:oracle:thin:@//"+DB_endpoint+":"+port+"/"+DB_SID+"", ""+DB_uname+"", ""+DB_password+""); 
	     Statement stmt = con.createStatement(); 
	     ResultSet rs = stmt.executeQuery(sql);
	    
	     while(rs.next()){
	         //Retrieve by column name
	    	 int ACRU_AMOUNT =  rs.getInt("ACRU_AMOUNT");
	    	 int ACRU_CURRENCY =  rs.getInt("ACRU_CURRENCY");
	    	 String ACRU_DISPLAY =  rs.getString("ACRU_DISPLAY");
	    	 int ACRU_FORMAT =  rs.getInt("ACRU_FORMAT");
	    	 int ACTIVE_STATUS =  rs.getInt("ACTIVE_STATUS");
	    	 int ADJS_AMOUNT =  rs.getInt("ADJS_AMOUNT");
	    	 int ADJS_CURRENCY =  rs.getInt("ADJS_CURRENCY");
	    	 String ADJS_DISPLAY =  rs.getString("ADJS_DISPLAY");
	    	 int ARCHIVAL_STATUS =  rs.getInt("ARCHIVAL_STATUS");
	    	 int ARRE_AMOUNT =  rs.getInt("ARRE_AMOUNT");
	    	 int ARRE_CURRENCY =  rs.getInt("ARRE_CURRENCY");
	    	 int ATAX_AMOUNT =  rs.getInt("ATAX_AMOUNT");
	    	 int ATAX_CURRENCY =  rs.getInt("ATAX_CURRENCY");
	    	 int BWIT_AMOUNT =  rs.getInt("BWIT_AMOUNT");
	    	 int BWIT_CURRENCY =  rs.getInt("BWIT_CURRENCY");
	    	 String BWIT_DISPLAY =  rs.getString("BWIT_DISPLAY");
	    	 int BWIT_FORMAT =  rs.getInt("BWIT_FORMAT");
	    	 int CABF_AMOUNT =  rs.getInt("CABF_AMOUNT");
	    	 int CABF_CURRENCY =  rs.getInt("CABF_CURRENCY");
	    	 int CACF_AMOUNT =  rs.getInt("CACF_AMOUNT");
	    	 int CACF_CURRENCY =  rs.getInt("CACF_CURRENCY");
	    	 int CAPG_AMOUNT =  rs.getInt("CAPG_AMOUNT");
	    	 int CAPG_CURRENCY =  rs.getInt("CAPG_CURRENCY");
	    	 int CDFI_AMOUNT =  rs.getInt("CDFI_AMOUNT");
	    	 int CDFI_CURRENCY =  rs.getInt("CDFI_CURRENCY");
	    	 String CDFI_DISPLAY =  rs.getString("CDFI_DISPLAY");
	    	 int CHAR_AMOUNT =  rs.getInt("CHAR_AMOUNT");
	    	 int CHAR_CURRENCY =  rs.getInt("CHAR_CURRENCY");
	    	 int CINL_AMOUNT =  rs.getInt("CINL_AMOUNT");
	    	 int CINL_CURRENCY =  rs.getInt("CINL_CURRENCY");
	    	 int COUN_AMOUNT =  rs.getInt("COUN_AMOUNT");
	    	 int COUN_CURRENCY =  rs.getInt("COUN_CURRENCY");
	    	 int DEDI_AMOUNT =  rs.getInt("DEDI_AMOUNT");
	    	 int DEDI_CURRENCY =  rs.getInt("DEDI_CURRENCY");
	    	 String DEDI_DISPLAY =  rs.getString("DEDI_DISPLAY");
	    	 int DEEM_AMOUNT =  rs.getInt("DEEM_AMOUNT");
	    	 int DEEM_CURRENCY =  rs.getInt("DEEM_CURRENCY");
	    	 String DEEM_DISPLAY =  rs.getString("DEEM_DISPLAY");
	    	 int DEFP_AMOUNT =  rs.getInt("DEFP_AMOUNT");
	    	 int DEFP_CURRENCY =  rs.getInt("DEFP_CURRENCY");
	    	 String DEFP_DISPLAY =  rs.getString("DEFP_DISPLAY");
	    	 int DEIT_AMOUNT =  rs.getInt("DEIT_AMOUNT");
	    	 int DEIT_CURRENCY =  rs.getInt("DEIT_CURRENCY");
	    	 String DEIT_DISPLAY =  rs.getString("DEIT_DISPLAY");
	    	 int DERY_AMOUNT =  rs.getInt("DERY_AMOUNT");
	    	 int DERY_CURRENCY =  rs.getInt("DERY_CURRENCY");
	    	 String DERY_DISPLAY =  rs.getString("DERY_DISPLAY");
	    	 int ENTITY_TYPE =  rs.getInt("ENTITY_TYPE");
	    	 int ENTL_AMOUNT =  rs.getInt("ENTL_AMOUNT");
	    	 int ENTL_CURRENCY =  rs.getInt("ENTL_CURRENCY");
	    	 int EQUL_AMOUNT =  rs.getInt("EQUL_AMOUNT");
	    	 int EQUL_CURRENCY =  rs.getInt("EQUL_CURRENCY");
	    	 String EQUL_DISPLAY =  rs.getString("EQUL_DISPLAY");
	    	 int EUTR_AMOUNT =  rs.getInt("EUTR_AMOUNT");
	    	 int EUTR_CURRENCY =  rs.getInt("EUTR_CURRENCY");
	    	 int EVENT_NUM =  rs.getInt("EVENT_NUM");
	    	 int EXEC_AMOUNT =  rs.getInt("EXEC_AMOUNT");
	    	 int EXEC_CURRENCY =  rs.getInt("EXEC_CURRENCY");
	    	 int FISC_AMOUNT =  rs.getInt("FISC_AMOUNT");
	    	 int FISC_CURRENCY =  rs.getInt("FISC_CURRENCY");
	    	 int FLFR_AMOUNT =  rs.getInt("FLFR_AMOUNT");
	    	 int FLFR_CURRENCY =  rs.getInt("FLFR_CURRENCY");
	    	 int FLOW_ID =  rs.getInt("FLOW_ID");
	    	 int FTCA_AMOUNT =  rs.getInt("FTCA_AMOUNT");
	    	 int FTCA_CURRENCY =  rs.getInt("FTCA_CURRENCY");
	    	 String FTCA_DISPLAY =  rs.getString("FTCA_DISPLAY");
	    	 int FTCA_FORMAT =  rs.getInt("FTCA_FORMAT");
	    	 int GRSS_AMOUNT =  rs.getInt("GRSS_AMOUNT");
	    	 int GRSS_CURRENCY =  rs.getInt("GRSS_CURRENCY");
	    	 int INBOX_ID =  rs.getInt("INBOX_ID");
	    	 int INCE_AMOUNT =  rs.getInt("INCE_AMOUNT");
	    	 int INCE_CURRENCY =  rs.getInt("INCE_CURRENCY");
	    	 int INCO_AMOUNT =  rs.getInt("INCO_AMOUNT");
	    	 int INCO_CURRENCY =  rs.getInt("INCO_CURRENCY");
	    	 String INCO_DISPLAY =  rs.getString("INCO_DISPLAY");
	    	 int INCO_FORMAT =  rs.getInt("INCO_FORMAT");
	    	 int INDM_AMOUNT =  rs.getInt("INDM_AMOUNT");
	    	 int INDM_CURRENCY =  rs.getInt("INDM_CURRENCY");
	    	 int INTR_AMOUNT =  rs.getInt("INTR_AMOUNT");
	    	 int INTR_CURRENCY =  rs.getInt("INTR_CURRENCY");
	    	 int ISDI_AMOUNT =  rs.getInt("ISDI_AMOUNT");
	    	 int ISDI_CURRENCY =  rs.getInt("ISDI_CURRENCY");
	    	 int LADT_AMOUNT =  rs.getInt("LADT_AMOUNT");
	    	 int LADT_CURRENCY =  rs.getInt("LADT_CURRENCY");
	    	 int LEVY_AMOUNT =  rs.getInt("LEVY_AMOUNT");
	    	 int LEVY_CURRENCY =  rs.getInt("LEVY_CURRENCY");
	    	 int LIDT_AMOUNT =  rs.getInt("LIDT_AMOUNT");
	    	 int LIDT_CURRENCY =  rs.getInt("LIDT_CURRENCY");
	    	 int LOCL_AMOUNT =  rs.getInt("LOCL_AMOUNT");
	    	 int LOCL_CURRENCY =  rs.getInt("LOCL_CURRENCY");
	    	 int LOCO_AMOUNT =  rs.getInt("LOCO_AMOUNT");
	    	 int LOCO_CURRENCY =  rs.getInt("LOCO_CURRENCY");
	    	 int LOTE_AMOUNT =  rs.getInt("LOTE_AMOUNT");
	    	 int LOTE_CURRENCY =  rs.getInt("LOTE_CURRENCY");
	    	 int LYDT_AMOUNT =  rs.getInt("LYDT_AMOUNT");
	    	 int LYDT_CURRENCY =  rs.getInt("LYDT_CURRENCY");
	    	 int MFDV_AMOUNT =  rs.getInt("MFDV_AMOUNT");
	    	 int MFDV_CURRENCY =  rs.getInt("MFDV_CURRENCY");
	    	 int MKTC_AMOUNT =  rs.getInt("MKTC_AMOUNT");
	    	 int MKTC_CURRENCY =  rs.getInt("MKTC_CURRENCY");
	    	 int NDIP_AMOUNT =  rs.getInt("NDIP_AMOUNT");
	    	 int NDIP_CURRENCY =  rs.getInt("NDIP_CURRENCY");
	    	 int NETT_AMOUNT =  rs.getInt("NETT_AMOUNT");
	    	 int NETT_CURRENCY =  rs.getInt("NETT_CURRENCY");
	    	 int NRAT_AMOUNT =  rs.getInt("NRAT_AMOUNT");
	    	 int NRAT_CURRENCY =  rs.getInt("NRAT_CURRENCY");
	    	 String NRAT_DISPLAY =  rs.getString("NRAT_DISPLAY");
	    	 int NRAT_FORMAT =  rs.getInt("NRAT_FORMAT");
	    	 int NTAX_AMOUNT =  rs.getInt("NTAX_AMOUNT");
	    	 int NTAX_CURRENCY =  rs.getInt("NTAX_CURRENCY");
	    	 int OCMT_AMOUNT =  rs.getInt("OCMT_AMOUNT");
	    	 int OCMT_CURRENCY =  rs.getInt("OCMT_CURRENCY");
	    	 int OPTION_SEQUENCE_NUM =  rs.getInt("OPTION_SEQUENCE_NUM");
	    	 int OVERALL_STATUS =  rs.getInt("OVERALL_STATUS");
	    	 int PAMM_AMOUNT =  rs.getInt("PAMM_AMOUNT");
	    	 int PAMM_CURRENCY =  rs.getInt("PAMM_CURRENCY");
	    	 int POST_AMOUNT =  rs.getInt("POST_AMOUNT");
	    	 int POST_CURRENCY =  rs.getInt("POST_CURRENCY");
	    	 int PRIN_AMOUNT =  rs.getInt("PRIN_AMOUNT");
	    	 int PRIN_CURRENCY =  rs.getInt("PRIN_CURRENCY");
	    	 int PRIORITY =  rs.getInt("PRIORITY");
	    	 int PSTA_AMOUNT =  rs.getInt("PSTA_AMOUNT");
	    	 int PSTA_CURRENCY =  rs.getInt("PSTA_CURRENCY");
	    	 int PSTA_FORMAT =  rs.getInt("PSTA_FORMAT");
	    	 String READY_FOR_ARCHIVAL_DATE =  rs.getString("READY_FOR_ARCHIVAL_DATE");
	    	 int REDP_AMOUNT =  rs.getInt("REDP_AMOUNT");
	    	 int REDP_CURRENCY =  rs.getInt("REDP_CURRENCY");
	    	 int REFU_AMOUNT =  rs.getInt("REFU_AMOUNT");
	    	 int REFU_CURRENCY =  rs.getInt("REFU_CURRENCY");
	    	 String REFU_DISPLAY =  rs.getString("REFU_DISPLAY");
	    	 int REGF_AMOUNT =  rs.getInt("REGF_AMOUNT");
	    	 int REGF_CURRENCY =  rs.getInt("REGF_CURRENCY");
	    	 int REIN_AMOUNT =  rs.getInt("REIN_AMOUNT");
	    	 int REIN_CURRENCY =  rs.getInt("REIN_CURRENCY");
	    	 int RESU_AMOUNT =  rs.getInt("RESU_AMOUNT");
	    	 int RESU_CURRENCY =  rs.getInt("RESU_CURRENCY");
	    	 int SHIP_AMOUNT =  rs.getInt("SHIP_AMOUNT");
	    	 int SHIP_CURRENCY =  rs.getInt("SHIP_CURRENCY");
	    	 int SOFE_AMOUNT =  rs.getInt("SOFE_AMOUNT");
	    	 int SOFE_CURRENCY =  rs.getInt("SOFE_CURRENCY");
	    	 int SOFT_LOCK_KEY =  rs.getInt("SOFT_LOCK_KEY");
	    	 int SOIC_AMOUNT =  rs.getInt("SOIC_AMOUNT");
	    	 int SOIC_CURRENCY =  rs.getInt("SOIC_CURRENCY");
	    	 int SPCN_AMOUNT =  rs.getInt("SPCN_AMOUNT");
	    	 int SPCN_CURRENCY =  rs.getInt("SPCN_CURRENCY");
	    	 int STAM_AMOUNT =  rs.getInt("STAM_AMOUNT");
	    	 int STAM_CURRENCY =  rs.getInt("STAM_CURRENCY");
	    	 int STEX_AMOUNT =  rs.getInt("STEX_AMOUNT");
	    	 int STEX_CURRENCY =  rs.getInt("STEX_CURRENCY");
	    	 int SUBS_AMOUNT =  rs.getInt("SUBS_AMOUNT");
	    	 int SUBS_CURRENCY =  rs.getInt("SUBS_CURRENCY");
	    	 String SYS_ENTRY_DATE =  rs.getString("SYS_ENTRY_DATE");
	    	 int TAXC_AMOUNT =  rs.getInt("TAXC_AMOUNT");
	    	 int TAXC_CURRENCY =  rs.getInt("TAXC_CURRENCY");
	    	 int TAXR_AMOUNT =  rs.getInt("TAXR_AMOUNT");
	    	 int TAXR_CURRENCY =  rs.getInt("TAXR_CURRENCY");
	    	 int TERM_SEQUENCE_NUM =  rs.getInt("TERM_SEQUENCE_NUM");
	    	 int TRAN_AMOUNT =  rs.getInt("TRAN_AMOUNT");
	    	 int TRAN_CURRENCY =  rs.getInt("TRAN_CURRENCY");
	    	 int TRAX_AMOUNT =  rs.getInt("TRAX_AMOUNT");
	    	 int TRAX_CURRENCY =  rs.getInt("TRAX_CURRENCY");
	    	 int TRAX_FORMAT =  rs.getInt("TRAX_FORMAT");
	    	 int TXDF_AMOUNT =  rs.getInt("TXDF_AMOUNT");
	    	 int TXDF_CURRENCY =  rs.getInt("TXDF_CURRENCY");
	    	 int TXFR_AMOUNT =  rs.getInt("TXFR_AMOUNT");
	    	 int TXFR_CURRENCY =  rs.getInt("TXFR_CURRENCY");
	    	 int TXIN_AMOUNT =  rs.getInt("TXIN_AMOUNT");
	    	 int TXIN_CURRENCY =  rs.getInt("TXIN_CURRENCY");
	    	 String TXIN_DISPLAY =  rs.getString("TXIN_DISPLAY");
	    	 int TXIN_FORMAT =  rs.getInt("TXIN_FORMAT");
	    	 int TXRC_AMOUNT =  rs.getInt("TXRC_AMOUNT");
	    	 int TXRC_CURRENCY =  rs.getInt("TXRC_CURRENCY");
	    	 int UNFR_AMOUNT =  rs.getInt("UNFR_AMOUNT");
	    	 int UNFR_CURRENCY =  rs.getInt("UNFR_CURRENCY");
	    	 int VATA_AMOUNT =  rs.getInt("VATA_AMOUNT");
	    	 int VATA_CURRENCY =  rs.getInt("VATA_CURRENCY");
	    	 int WITF_AMOUNT =  rs.getInt("WITF_AMOUNT");
	    	 int WITF_CURRENCY =  rs.getInt("WITF_CURRENCY");
	    	 int WITL_AMOUNT =  rs.getInt("WITL_AMOUNT");
	    	 int WITL_CURRENCY =  rs.getInt("WITL_CURRENCY");

	     
		  myWriter.write(ACRU_AMOUNT+","	+ACRU_CURRENCY+","	+ACRU_DISPLAY+","	+ACRU_FORMAT+","	+ACTIVE_STATUS+","	+ADJS_AMOUNT+","	+ADJS_CURRENCY+","	+ADJS_DISPLAY+","	+ARCHIVAL_STATUS+","	+ARRE_AMOUNT+","	+ARRE_CURRENCY+","	+ATAX_AMOUNT+","	+ATAX_CURRENCY+","	+BWIT_AMOUNT+","	+BWIT_CURRENCY+","	+BWIT_DISPLAY+","	+BWIT_FORMAT+","	+CABF_AMOUNT+","	+CABF_CURRENCY+","	+CACF_AMOUNT+","	+CACF_CURRENCY+","	+CAPG_AMOUNT+","	+CAPG_CURRENCY+","	+CDFI_AMOUNT+","	+CDFI_CURRENCY+","	+CDFI_DISPLAY+","	+CHAR_AMOUNT+","	+CHAR_CURRENCY+","	+CINL_AMOUNT+","	+CINL_CURRENCY+","	+COUN_AMOUNT+","	+COUN_CURRENCY+","	+DEDI_AMOUNT+","	+DEDI_CURRENCY+","	+DEDI_DISPLAY+","	+DEEM_AMOUNT+","	+DEEM_CURRENCY+","	+DEEM_DISPLAY+","	+DEFP_AMOUNT+","	+DEFP_CURRENCY+","	+DEFP_DISPLAY+","	+DEIT_AMOUNT+","	+DEIT_CURRENCY+","	+DEIT_DISPLAY+","	+DERY_AMOUNT+","	+DERY_CURRENCY+","	+DERY_DISPLAY+","	+ENTITY_TYPE+","	+ENTL_AMOUNT+","	+ENTL_CURRENCY+","	+EQUL_AMOUNT+","	+EQUL_CURRENCY+","	+EQUL_DISPLAY+","	+EUTR_AMOUNT+","	+EUTR_CURRENCY+","	+EVENT_NUM+","	+EXEC_AMOUNT+","	+EXEC_CURRENCY+","	+FISC_AMOUNT+","	+FISC_CURRENCY+","	+FLFR_AMOUNT+","	+FLFR_CURRENCY+","	+FLOW_ID+","	+FTCA_AMOUNT+","	+FTCA_CURRENCY+","	+FTCA_DISPLAY+","	+FTCA_FORMAT+","	+GRSS_AMOUNT+","	+GRSS_CURRENCY+","	+INBOX_ID+","	+INCE_AMOUNT+","	+INCE_CURRENCY+","	+INCO_AMOUNT+","	+INCO_CURRENCY+","	+INCO_DISPLAY+","	+INCO_FORMAT+","	+INDM_AMOUNT+","	+INDM_CURRENCY+","	+INTR_AMOUNT+","	+INTR_CURRENCY+","	+ISDI_AMOUNT+","	+ISDI_CURRENCY+","	+LADT_AMOUNT+","	+LADT_CURRENCY+","	+LEVY_AMOUNT+","	+LEVY_CURRENCY+","	+LIDT_AMOUNT+","	+LIDT_CURRENCY+","	+LOCL_AMOUNT+","	+LOCL_CURRENCY+","	+LOCO_AMOUNT+","	+LOCO_CURRENCY+","	+LOTE_AMOUNT+","	+LOTE_CURRENCY+","	+LYDT_AMOUNT+","	+LYDT_CURRENCY+","	+MFDV_AMOUNT+","	+MFDV_CURRENCY+","	+MKTC_AMOUNT+","	+MKTC_CURRENCY+","	+NDIP_AMOUNT+","	+NDIP_CURRENCY+","	+NETT_AMOUNT+","	+NETT_CURRENCY+","	+NRAT_AMOUNT+","	+NRAT_CURRENCY+","	+NRAT_DISPLAY+","	+NRAT_FORMAT+","	+NTAX_AMOUNT+","	+NTAX_CURRENCY+","	+OCMT_AMOUNT+","	+OCMT_CURRENCY+","	+OPTION_SEQUENCE_NUM+","	+OVERALL_STATUS+","	+PAMM_AMOUNT+","	+PAMM_CURRENCY+","	+POST_AMOUNT+","	+POST_CURRENCY+","	+PRIN_AMOUNT+","	+PRIN_CURRENCY+","	+PRIORITY+","	+PSTA_AMOUNT+","	+PSTA_CURRENCY+","	+PSTA_FORMAT+","	+READY_FOR_ARCHIVAL_DATE+","	+REDP_AMOUNT+","	+REDP_CURRENCY+","	+REFU_AMOUNT+","	+REFU_CURRENCY+","	+REFU_DISPLAY+","	+REGF_AMOUNT+","	+REGF_CURRENCY+","	+REIN_AMOUNT+","	+REIN_CURRENCY+","	+RESU_AMOUNT+","	+RESU_CURRENCY+","	+SHIP_AMOUNT+","	+SHIP_CURRENCY+","	+SOFE_AMOUNT+","	+SOFE_CURRENCY+","	+SOFT_LOCK_KEY+","	+SOIC_AMOUNT+","	+SOIC_CURRENCY+","	+SPCN_AMOUNT+","	+SPCN_CURRENCY+","	+STAM_AMOUNT+","	+STAM_CURRENCY+","	+STEX_AMOUNT+","	+STEX_CURRENCY+","	+SUBS_AMOUNT+","	+SUBS_CURRENCY+","	+SYS_ENTRY_DATE+","	+TAXC_AMOUNT+","	+TAXC_CURRENCY+","	+TAXR_AMOUNT+","	+TAXR_CURRENCY+","	+TERM_SEQUENCE_NUM+","	+TRAN_AMOUNT+","	+TRAN_CURRENCY+","	+TRAX_AMOUNT+","	+TRAX_CURRENCY+","	+TRAX_FORMAT+","	+TXDF_AMOUNT+","	+TXDF_CURRENCY+","	+TXFR_AMOUNT+","	+TXFR_CURRENCY+","	+TXIN_AMOUNT+","	+TXIN_CURRENCY+","	+TXIN_DISPLAY+","	+TXIN_FORMAT+","	+TXRC_AMOUNT+","	+TXRC_CURRENCY+","	+UNFR_AMOUNT+","	+UNFR_CURRENCY+","	+VATA_AMOUNT+","	+VATA_CURRENCY+","	+WITF_AMOUNT+","	+WITF_CURRENCY+","	+WITL_AMOUNT+","	+WITL_CURRENCY);
		  myWriter.write("\n");

	 
	     
	     System.out.println(ACRU_AMOUNT+","	+ACRU_CURRENCY+","	+ACRU_DISPLAY+","	+ACRU_FORMAT+","	+ACTIVE_STATUS+","	+ADJS_AMOUNT+","	+ADJS_CURRENCY+","	+ADJS_DISPLAY+","	+ARCHIVAL_STATUS+","	+ARRE_AMOUNT+","	+ARRE_CURRENCY+","	+ATAX_AMOUNT+","	+ATAX_CURRENCY+","	+BWIT_AMOUNT+","	+BWIT_CURRENCY+","	+BWIT_DISPLAY+","	+BWIT_FORMAT+","	+CABF_AMOUNT+","	+CABF_CURRENCY+","	+CACF_AMOUNT+","	+CACF_CURRENCY+","	+CAPG_AMOUNT+","	+CAPG_CURRENCY+","	+CDFI_AMOUNT+","	+CDFI_CURRENCY+","	+CDFI_DISPLAY+","	+CHAR_AMOUNT+","	+CHAR_CURRENCY+","	+CINL_AMOUNT+","	+CINL_CURRENCY+","	+COUN_AMOUNT+","	+COUN_CURRENCY+","	+DEDI_AMOUNT+","	+DEDI_CURRENCY+","	+DEDI_DISPLAY+","	+DEEM_AMOUNT+","	+DEEM_CURRENCY+","	+DEEM_DISPLAY+","	+DEFP_AMOUNT+","	+DEFP_CURRENCY+","	+DEFP_DISPLAY+","	+DEIT_AMOUNT+","	+DEIT_CURRENCY+","	+DEIT_DISPLAY+","	+DERY_AMOUNT+","	+DERY_CURRENCY+","	+DERY_DISPLAY+","	+ENTITY_TYPE+","	+ENTL_AMOUNT+","	+ENTL_CURRENCY+","	+EQUL_AMOUNT+","	+EQUL_CURRENCY+","	+EQUL_DISPLAY+","	+EUTR_AMOUNT+","	+EUTR_CURRENCY+","	+EVENT_NUM+","	+EXEC_AMOUNT+","	+EXEC_CURRENCY+","	+FISC_AMOUNT+","	+FISC_CURRENCY+","	+FLFR_AMOUNT+","	+FLFR_CURRENCY+","	+FLOW_ID+","	+FTCA_AMOUNT+","	+FTCA_CURRENCY+","	+FTCA_DISPLAY+","	+FTCA_FORMAT+","	+GRSS_AMOUNT+","	+GRSS_CURRENCY+","	+INBOX_ID+","	+INCE_AMOUNT+","	+INCE_CURRENCY+","	+INCO_AMOUNT+","	+INCO_CURRENCY+","	+INCO_DISPLAY+","	+INCO_FORMAT+","	+INDM_AMOUNT+","	+INDM_CURRENCY+","	+INTR_AMOUNT+","	+INTR_CURRENCY+","	+ISDI_AMOUNT+","	+ISDI_CURRENCY+","	+LADT_AMOUNT+","	+LADT_CURRENCY+","	+LEVY_AMOUNT+","	+LEVY_CURRENCY+","	+LIDT_AMOUNT+","	+LIDT_CURRENCY+","	+LOCL_AMOUNT+","	+LOCL_CURRENCY+","	+LOCO_AMOUNT+","	+LOCO_CURRENCY+","	+LOTE_AMOUNT+","	+LOTE_CURRENCY+","	+LYDT_AMOUNT+","	+LYDT_CURRENCY+","	+MFDV_AMOUNT+","	+MFDV_CURRENCY+","	+MKTC_AMOUNT+","	+MKTC_CURRENCY+","	+NDIP_AMOUNT+","	+NDIP_CURRENCY+","	+NETT_AMOUNT+","	+NETT_CURRENCY+","	+NRAT_AMOUNT+","	+NRAT_CURRENCY+","	+NRAT_DISPLAY+","	+NRAT_FORMAT+","	+NTAX_AMOUNT+","	+NTAX_CURRENCY+","	+OCMT_AMOUNT+","	+OCMT_CURRENCY+","	+OPTION_SEQUENCE_NUM+","	+OVERALL_STATUS+","	+PAMM_AMOUNT+","	+PAMM_CURRENCY+","	+POST_AMOUNT+","	+POST_CURRENCY+","	+PRIN_AMOUNT+","	+PRIN_CURRENCY+","	+PRIORITY+","	+PSTA_AMOUNT+","	+PSTA_CURRENCY+","	+PSTA_FORMAT+","	+READY_FOR_ARCHIVAL_DATE+","	+REDP_AMOUNT+","	+REDP_CURRENCY+","	+REFU_AMOUNT+","	+REFU_CURRENCY+","	+REFU_DISPLAY+","	+REGF_AMOUNT+","	+REGF_CURRENCY+","	+REIN_AMOUNT+","	+REIN_CURRENCY+","	+RESU_AMOUNT+","	+RESU_CURRENCY+","	+SHIP_AMOUNT+","	+SHIP_CURRENCY+","	+SOFE_AMOUNT+","	+SOFE_CURRENCY+","	+SOFT_LOCK_KEY+","	+SOIC_AMOUNT+","	+SOIC_CURRENCY+","	+SPCN_AMOUNT+","	+SPCN_CURRENCY+","	+STAM_AMOUNT+","	+STAM_CURRENCY+","	+STEX_AMOUNT+","	+STEX_CURRENCY+","	+SUBS_AMOUNT+","	+SUBS_CURRENCY+","	+SYS_ENTRY_DATE+","	+TAXC_AMOUNT+","	+TAXC_CURRENCY+","	+TAXR_AMOUNT+","	+TAXR_CURRENCY+","	+TERM_SEQUENCE_NUM+","	+TRAN_AMOUNT+","	+TRAN_CURRENCY+","	+TRAX_AMOUNT+","	+TRAX_CURRENCY+","	+TRAX_FORMAT+","	+TXDF_AMOUNT+","	+TXDF_CURRENCY+","	+TXFR_AMOUNT+","	+TXFR_CURRENCY+","	+TXIN_AMOUNT+","	+TXIN_CURRENCY+","	+TXIN_DISPLAY+","	+TXIN_FORMAT+","	+TXRC_AMOUNT+","	+TXRC_CURRENCY+","	+UNFR_AMOUNT+","	+UNFR_CURRENCY+","	+VATA_AMOUNT+","	+VATA_CURRENCY+","	+WITF_AMOUNT+","	+WITF_CURRENCY+","	+WITL_AMOUNT+","	+WITL_CURRENCY);

	      }
	      rs.close();
	      stmt.close();
	      con.close();
	      myWriter.close();
	      System.out.println("Successfully executed");
		}

}
